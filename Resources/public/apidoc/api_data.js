define({ "api": [  {    "type": "delete",    "url": "/v1/users/app/registration/{userIdentifier}",    "title": "Deregister a user",    "name": "DeregisterAppUser",    "group": "AppUser",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userIdentifier",            "description": "<p>Identifier of the user</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"The user is unregistered and removed\"\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/AppUserController.php",    "groupTitle": "AppUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ObjectNotFound",            "description": "<p>The object could not be found</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 X04 ObjectNotFound\n{\n  \"error\": {\n    \"code\": \"404\",\n    \"message\": \"[object] not found\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/v1/users/app/profile",    "title": "Get the users' profile",    "name": "GetAppUserProfile",    "group": "AppUser",    "version": "1.0.0",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"zC9WahWKVTcdG5BfLfHPU9\",\n    \"first_name\": \"John\",\n    ...\n    \"activation_token\": \"thisisanactivationtoken\",\n    \"meta_data\": {\n      \"gender\": \"male\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/AppUserController.php",    "groupTitle": "AppUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAccessToken",            "description": "<p>The access token provided is invalid.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NotAuthorized",            "description": "<p>You are not authorized to perform this request</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 InvalidAccessToken\n{\n  \"error\": \"invalid_grant\",\n  \"message\": \"The access token provided is invalid.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 NotAuthorized\n{\n  \"error\": {\n    \"code\": 401,\n    \"message\": \"You are not authorized to perform this request\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/v1/users/app/password/reset",    "title": "Password reset request",    "name": "PasswordResetAppUser",    "group": "AppUser",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email address of the user.</p>"          }        ]      },      "examples": [        {          "title": "Content:",          "content": "{\n  \"email\": \"johndoe@example.com\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"The user has received a password reset link\"\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/AppUserController.php",    "groupTitle": "AppUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/v1/users/app/registration",    "title": "Register a user",    "name": "RegisterAppUser",    "group": "AppUser",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>First name of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Last name of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email address of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of the user.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "extra_data",            "description": "<p>Extra meta data.</p>"          }        ]      },      "examples": [        {          "title": "Content:",          "content": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"jonhdoe@example.com\",\n  \"password\": \"thisisasecretpassword\",\n  \"extra_data\": {\n    \"key\": \"value\"\n  }\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"zC9WahWKVTcdG5BfLfHPU9\",\n    \"first_name\": \"John\",\n    ...\n    \"activation_token\": \"thisisanactivationtoken\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserAlreadyRegistered",            "description": "<p>This user is already registered</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidParameters",            "description": "<p>Not all of the required parameters are present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 UserAlreadyRegistered\n{\n  \"error\": {\n    \"code\": 22,\n    \"message\": \"This user is already registered\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 InvalidParameters\n{\n  \"error\": {\n    \"code\": 422,\n    \"message\": \"Not all required keys are present, please provide: manufacturer\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/AppUserController.php",    "groupTitle": "AppUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/v1/users/app/profile",    "title": "Update the users' profile",    "name": "UpdateAppUserProfile",    "group": "AppUser",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>First name of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Last name of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email address of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>Password of the user.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "extra_data",            "description": "<p>Extra meta data.</p>"          }        ]      },      "examples": [        {          "title": "Content:",          "content": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"password\": \"thisisasecretpassword\",\n  \"extra_data\": {\n    \"key\": \"value\"\n  }\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"zC9WahWKVTcdG5BfLfHPU9\",\n    \"first_name\": \"John\",\n    ...\n    \"activation_token\": \"thisisanactivationtoken\",\n    \"meta_data\": {\n      \"key\": \"value\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "EmailAlreadyExists",            "description": "<p>The provided email address is already registered</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidParameters",            "description": "<p>Not all of the required parameters are present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAccessToken",            "description": "<p>The access token provided is invalid.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NotAuthorized",            "description": "<p>You are not authorized to perform this request</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 EmailAlreadyExists\n{\n  \"error\": {\n    \"code\": 1122,\n    \"message\": \"An account with the provided email address already exists\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 InvalidParameters\n{\n  \"error\": {\n    \"code\": 422,\n    \"message\": \"Not all required keys are present, please provide: manufacturer\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 InvalidAccessToken\n{\n  \"error\": \"invalid_grant\",\n  \"message\": \"The access token provided is invalid.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 NotAuthorized\n{\n  \"error\": {\n    \"code\": 401,\n    \"message\": \"You are not authorized to perform this request\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/AppUserController.php",    "groupTitle": "AppUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/v1/collections/:version/:identifier?offset=:offset&limit=:limit&order_by=:order_by&direction=:direction&:field=value",    "title": "Get collection entries",    "name": "GetCollectionEntities",    "group": "Collection",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "version",            "description": "<p>Version of the application.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "identifier",            "description": "<p>Collection identifier.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "offset",            "description": "<p>The offset to start returning entities, default = 0.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "limit",            "description": "<p>Limit of the collection result, default = 25.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order_by",            "description": "<p>Order the list by entry field, default = created_at.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Direction of the ordering, default = ASC.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "field",            "description": "<p>Filtering the list on field / value basis.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {entryObject},\n    {entryObject},\n    {entryObject},\n    ...\n  ],\n  \"pagination\": {\n    \"total\": 153,\n    \"offset\": 0,\n    \"limit\": 25\n  }\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/CollectionController.php",    "groupTitle": "Collection",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAccessToken",            "description": "<p>The access token provided is invalid.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 InvalidAccessToken\n{\n  \"error\": \"invalid_grant\",\n  \"message\": \"The access token provided is invalid.\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/v1/collections/:version/:identifier/:id",    "title": "Get single collection entry",    "name": "GetCollectionEntity",    "group": "Collection",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "version",            "description": "<p>Version of the application.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "identifier",            "description": "<p>Collection identifier.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the collection entity.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {entryObject}\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/CollectionController.php",    "groupTitle": "Collection",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAccessToken",            "description": "<p>The access token provided is invalid.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 InvalidAccessToken\n{\n  \"error\": \"invalid_grant\",\n  \"message\": \"The access token provided is invalid.\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/v1/devices/registration/{deviceIdentifier}",    "title": "Deregister a device",    "name": "DeregisterDevice",    "group": "Device",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceIdentifier",            "description": "<p>Identifier of the device</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"The devices registration is removed\"\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/DeviceController.php",    "groupTitle": "Device",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ObjectNotFound",            "description": "<p>The object could not be found</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 X04 ObjectNotFound\n{\n  \"error\": {\n    \"code\": \"404\",\n    \"message\": \"[object] not found\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/v1/devices/registration",    "title": "Register a device",    "name": "RegisterDevice",    "group": "Device",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "firebase_token",            "description": "<p>Firebase token for Android devices.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "apns_token",            "description": "<p>APNS token for iOS devices.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the device.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "model",            "description": "<p>Model of the device.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "manufacturer",            "description": "<p>Manufacturer of the device.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "platform",            "description": "<p>Platform of the device.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "app_version",            "description": "<p>Version of app.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "os_version",            "description": "<p>OS version.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "language",            "description": "<p>Language of device.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "extra_data",            "description": "<p>Extra meta data.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "user_identifier",            "description": "<p>Optional user identifier.</p>"          }        ]      },      "examples": [        {          "title": "Content:",          "content": "{\n  \"firebase_token\": \"d7zgIyAXz_E:APA91bF2arcF8QMeeUHH32WBH8wKBJVTyr9WFnIL8BYJP_f6B9_Qn0ZY1zfVoyaelCAKjdsKz09UNbGxe0QcGARmU-pqeilNqKqRh\",\n  \"apns_token\": \"59CF77D83300612895C8EAEFE51B443B4017F4303\",\n  \"name\": \"iPhone off John\",\n  \"model\": \"iPhone 5s\",\n  \"manufacturer\": \"Apple\",\n  \"platform\": \"ios\",\n  \"app_version\": \"1.0.0\",\n  \"os_version\": \"11.2.1\",\n  \"language\": \"NL\",\n  \"extra_data\": {\n    \"email\": \"johndoe@example.com\",\n    \"password\": \"thisisasecretpassword\"\n  },\n  \"user_identifier\": \"zC9WahWKVTcdG5BfLfHPU9\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"identifier\": \"zC9WahWKVTcdG5BfLfHPU9\",\n    \"app_user\": null,\n    \"firebase_token\": \"d7zgIyAXz_E:APA91bF2arcF8QMeeUHH32WBH8wKBJVTyr9WFnIL8BYJP_f6B9_Qn0ZY1zfVoyaelCAKjdsKz09UNbGxe0QcGARmU-pqeilNqKqRh\",\n    \"apns_token\": \"59CF77D83300612895C8EAEFE51B443B4017F4303\",\n    ...\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DeviceAlreadyRegistered",            "description": "<p>This device is already registered</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidParameters",            "description": "<p>Not all of the required parameters are present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 DeviceAlreadyRegistered\n{\n  \"error\": {\n    \"code\": 422,\n    \"message\": \"This device is already registered\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 InvalidParameters\n{\n  \"error\": {\n    \"code\": 422,\n    \"message\": \"Not all required keys are present, please provide: manufacturer\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/DeviceController.php",    "groupTitle": "Device",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/v1/notifications/segments/{deviceIdentifier}",    "title": "Retrieve the segments",    "name": "GetNotificationSegments",    "group": "NotificationSegments",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceIdentifier",            "description": "<p>Identifier of the device</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": {\n        \"nl\": \"Segment een\",\n        \"en\": \"Segment one\"\n      },\n      \"subscribed\": false\n    }\n  ]\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/PushNotificationSegmentController.php",    "groupTitle": "NotificationSegments",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ObjectNotFound",            "description": "<p>The object could not be found</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 X04 ObjectNotFound\n{\n  \"error\": {\n    \"code\": \"404\",\n    \"message\": \"[object] not found\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/v1/notifications/segments",    "title": "Update the segments of a device",    "name": "PutNotificationSegments",    "group": "NotificationSegments",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "language",            "description": "<p>Language of device.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "extra_data",            "description": "<p>Extra meta data.</p>"          }        ]      },      "examples": [        {          "title": "Content:",          "content": "{\n  \"device_identifier\": \"d7zgIyAXz_E:APA91bF2arcF8QMee\",\n  \"segments\": [\n    {\n      \"id\": 1\n      \"subscribed\": true\n    }\n  ]\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"Segments of device are updated\"\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/PushNotificationSegmentController.php",    "groupTitle": "NotificationSegments",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidParameters",            "description": "<p>Not all of the required parameters are present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "ObjectNotFound",            "description": "<p>The object could not be found</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 InvalidParameters\n{\n  \"error\": {\n    \"code\": 422,\n    \"message\": \"Not all required keys are present, please provide: manufacturer\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 X04 ObjectNotFound\n{\n  \"error\": {\n    \"code\": \"404\",\n    \"message\": \"[object] not found\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/v1/translations",    "title": "Retrieve the translations",    "name": "RetrieveTranslations",    "group": "Translation",    "version": "1.0.0",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"identifier\": \"zC9WahWKVTcdG5BfLfHPU9\",\n    \"app_user\": null,\n    \"firebase_token\": \"d7zgIyAXz_E:APA91bF2arcF8QMeeUHH32WBH8wKBJVTyr9WFnIL8BYJP_f6B9_Qn0ZY1zfVoyaelCAKjdsKz09UNbGxe0QcGARmU-pqeilNqKqRh\",\n    \"apns_token\": \"59CF77D83300612895C8EAEFE51B443B4017F4303\",\n    ...\n  }\n}",          "type": "json"        }      ]    },    "filename": "Controller/Api/V1/TranslationController.php",    "groupTitle": "Translation",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Pronto CMS OAuth access token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"Authorization\": \"Bearer [access_token]\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidParameters",            "description": "<p>Not all of the required parameters are present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthorizationHeader",            "description": "<p>No authorization header present</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationHeader",            "description": "<p>Client id and secret could not be parsed from the authorization header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidAuthorizationToken",            "description": "<p>Invalid authorization token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 InvalidParameters\n{\n  \"error\": {\n    \"code\": 422,\n    \"message\": \"Not all required keys are present, please provide: manufacturer\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 NoAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"No authorization header present\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationHeader\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Client id and secret could not be parsed from the authorization header\"\n  }\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 InvalidAuthorizationToken\n{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"Invalid authorization token\"\n  }\n}",          "type": "json"        }      ]    }  }] });
