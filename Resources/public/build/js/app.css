ul[data-v-1943cc2d] {
  list-style-type: none;
  margin: 20px 0 10px 0;
  padding: 0;
  color: #222222;
}
ul > li[data-v-1943cc2d] {
  min-height: 45px;
  overflow-y: auto;
  display: block;
  margin: 0 0 5px 0;
}
ul > li > div[data-v-1943cc2d] {
  display: flex;
  flex-direction: row;
  cursor: pointer;
  background-color: transparent;
  position: relative;
}
ul > li > div > span[data-v-1943cc2d] {
  height: 45px;
  line-height: 45px;
  color: rgba(0, 0, 0, 0.5);
  transition: color 0.2s ease;
}
ul > li > div > span[data-v-1943cc2d]:nth-child(1) {
  flex: 0 0 40px;
  text-align: right;
  padding: 0 15px 0 0;
  font-size: 11px;
}
ul > li > div > span[data-v-1943cc2d]:nth-child(2) {
  flex: auto;
}
ul > li > div > span[data-v-1943cc2d]:nth-child(3) {
  flex: 0 0 40px;
  padding: 0 0 0 10px;
  font-size: 12px;
  color: var(--link-color);
}
ul > li > div > span:nth-child(3) svg[data-v-1943cc2d] {
  transition: transform 0.2s ease;
}
ul > li > div > span:nth-child(3) svg.rotate[data-v-1943cc2d] {
  transform: rotate(-90deg);
}
ul > li > div:not(.router-link-exact-active):hover > span[data-v-1943cc2d]:not(:nth-child(3)) {
  color: rgba(0, 0, 0, 0.7);
}
ul > li ul[data-v-1943cc2d] {
  margin: 0;
  padding: 0;
  list-style-type: none;
  opacity: 0;
  transition: height 0.1s, opacity 0.2s ease;
}
ul > li ul li[data-v-1943cc2d] {
  line-height: 45px;
  overflow-y: auto;
  display: block;
  margin: 0 0 5px 0;
}
ul > li ul li div[data-v-1943cc2d] {
  display: flex;
  flex-direction: row;
  cursor: pointer;
  background-color: transparent;
  transition: background-color 0.2s ease;
  position: relative;
}
ul > li ul li div span[data-v-1943cc2d] {
  height: 45px;
  line-height: 45px;
  color: rgba(0, 0, 0, 0.5);
}
ul > li ul li div span[data-v-1943cc2d]:nth-child(1) {
  padding-left: 40px;
  flex: auto;
}
ul > li ul li div span[data-v-1943cc2d]:nth-child(2) {
  flex: 0 0 40px;
  padding: 0 0 0 10px;
  font-size: 12px;
  color: var(--link-color);
}
ul > li ul li div span:nth-child(2) svg[data-v-1943cc2d] {
  transition: transform 0.2s ease;
}
ul > li ul li div span:nth-child(2) svg.rotate[data-v-1943cc2d] {
  transform: rotate(-90deg);
}
ul > li ul li div:not(.router-link-exact-active):hover > span[data-v-1943cc2d]:not(:nth-child(2)) {
  color: rgba(0, 0, 0, 0.7);
}
ul > li ul li > ul > li[data-v-1943cc2d] {
  cursor: pointer;
  padding-left: 40px;
  margin: 0;
  font-size: 12px;
  color: rgba(0, 0, 0, 0.5);
  background-color: transparent;
  transition: background-color 0.2s ease;
  position: relative;
}
ul > li ul li > ul > li[data-v-1943cc2d]:hover {
  color: rgba(0, 0, 0, 0.7);
}
ul > li ul.open[data-v-1943cc2d] {
  opacity: 1;
}
ul > li div.router-link-exact-active[data-v-1943cc2d],
ul > li div.router-link-active[data-v-1943cc2d],
ul > li li.router-link-exact-active[data-v-1943cc2d],
ul > li li.router-link-active[data-v-1943cc2d] {
  font-weight: bold;
  color: var(--link-color);
}
ul > li div.router-link-exact-active span[data-v-1943cc2d],
ul > li div.router-link-active span[data-v-1943cc2d],
ul > li li.router-link-exact-active span[data-v-1943cc2d],
ul > li li.router-link-active span[data-v-1943cc2d] {
  color: var(--link-color);
}


.card .card-body h1[data-v-5a065e6a] {
  font-size: 16px;
  color: #a4a4a4;
}


.html-preview[data-v-a636e3c8] {
  margin: 0;
  min-height: 400px;
  overflow-y: auto;
  position: relative;
}
.html-preview .browser[data-v-a636e3c8] {
  border: 3px solid #f1f1f1;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  min-height: 400px;
  position: relative;
}
.html-preview .toolbar[data-v-a636e3c8] {
  padding: 10px;
  background: #f1f1f1;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  position: relative;
}
.html-preview .toolbar .column[data-v-a636e3c8] {
  float: left;
  position: relative;
}
.html-preview .toolbar .column .dot[data-v-a636e3c8] {
  margin-top: 4px;
  height: 12px;
  width: 12px;
  background-color: #bbb;
  border-radius: 50%;
  display: inline-block;
}
.html-preview .toolbar .column .dot[data-v-a636e3c8]:first-child {
  background-color: #ED594A;
}
.html-preview .toolbar .column .dot[data-v-a636e3c8]:nth-child(2) {
  background-color: #FDD800;
}
.html-preview .toolbar .column .dot[data-v-a636e3c8]:last-child {
  background-color: #5AC05A;
}
.html-preview .toolbar .left[data-v-a636e3c8] {
  width: 55px;
}
.html-preview .toolbar .right[data-v-a636e3c8] {
  width: 25px;
}
.html-preview .toolbar .right > div[data-v-a636e3c8] {
  float: right;
}
.html-preview .toolbar .right > div .bar[data-v-a636e3c8] {
  width: 17px;
  height: 3px;
  background-color: #aaa;
  margin: 3px 0;
  display: block;
}
.html-preview .toolbar .middle[data-v-a636e3c8] {
  width: calc(100% - 80px);
}
.html-preview .toolbar .middle input[type=text][data-v-a636e3c8] {
  width: 100%;
  border-radius: 3px;
  border: none;
  background-color: white;
  margin-top: -8px;
  height: 25px;
  color: #666;
  padding: 5px;
}
.html-preview .toolbar[data-v-a636e3c8]:after {
  content: "";
  display: table;
  clear: both;
}
.html-preview .content[data-v-a636e3c8] {
  min-height: 355px;
  overflow-y: auto;
  position: relative;
}
.html-preview .content iframe[data-v-a636e3c8] {
  width: 100%;
  min-height: 355px;
  border: 0;
  display: block;
}


.progress-container .row .col,
.progress-container .row .col-auto,
.progress-container .row .el-progress__text {
  color: #8898aa !important;
  letter-spacing: 1px;
  text-transform: uppercase !important;
  font-size: 11px;
  font-weight: 500;
}
.progress-container .el-progress__text {
  font-size: 15px;
  font-weight: 600;
  letter-spacing: 0;
}



/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/